type Query {
    # Movie
    movies: [Movie]
    movieWithId(id: String!): Movie
    movieWithTitle(title: String!): Movie
    moviesWithRating(rating: Float!, rating_type: RatingType!): [Movie]
    moviesWithDirector(director: String!): [Movie]

    # Actor
    actors: [Actor]
    actorWithId(id: String!): Actor
}

type Mutation {
    # Movie
    addMovie(id: String!, title: String!, director: String!, rating: Float!): Movie
    updateMovieRate(id: String!, rate: Float!): Movie
    deleteMovie(id: String!): Movie

    # Actor TODO: Test'em all.
    addActor(id: String!, firstname: String!, lastname: String!, birthyear: Int!, films: [String]): Actor
    updateActorInfo(id: String!, firstname: String, lastname: String, birthyear: Int): Actor
    addMovieToActor(actor_id: String!, movie_id: String!): Actor
    deleteActor(id: String!): Actor
}

type Movie {
    id: String!
    title: String!
    director: String!
    rating: Float!
    actors: [Actor]
}

type Actor {
    id: String!
    firstname: String!
    lastname: String!
    birthyear: Int!
    films: [String!]
}

enum RatingType {
    eq
    gt
    gte
    lt
    lte
}